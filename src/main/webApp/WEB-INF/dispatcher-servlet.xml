<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
       http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

    <!-- escaneo de componentes busqueda de componentes desde un paquete base -->
    <context:component-scan base-package="pe.tuna.*"/>

    <!-- Para que toda la gestion de mvc se haga a traves de anotaciones -->
    <mvc:annotation-driven/>

    <!-- Habilitamos la gestion de transacciones a traves de anotaciones -->
    <tx:annotation-driven/>

    <!-- Resolutor de vistas -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
        <property name="prefix" value="/WEB-INF/view/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!-- Bean para los mensajes de formulario -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="/WEB-INF/mensajes"/>
    </bean>

    <!-- Definimos nuestro origen de datos y los parametros de conexion a la BD -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://localhost:3306/bdSpringBootDemo"></property>
        <property name="username" value="root"></property>
        <property name="password" value=""></property>
    </bean>

    <!-- Definimos el vendor adapter le indicamos que va a ser de hibernate-->
    <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="showSql" value="true"></property>
        <property name="generateDdl" value="true"></property>
        <property name="database" value="MYSQL"></property>
    </bean>

    <!-- Por ultimo configuramos el entityManagerFactory: es el componente ligero pero que no permite acceder a todos los objetos -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>
        <property name="packagesToScan" value="pe.tuna.model"/>
    </bean>

    <!-- AÃ±adir el marco transaccional -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"></property>
    </bean>

    <!-- Indicamos el paquete basico donde van a estar nuestros repositorios -->
    <jpa:repositories base-package="pe.tuna.repository"></jpa:repositories>

    <!-- Definimos el interceptor
    <mvc:interceptors>
        <bean class="pe.tuna.interceptores.TimeBasedAccessInterceptor">
            <property name="openningTime" value="9" />
            <property name="closingTime" value="24"/>
        </bean>
    </mvc:interceptors>
    -->

</beans>